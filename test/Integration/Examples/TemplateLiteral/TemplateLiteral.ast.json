{
  "type": "ModuleNode",
  "payload": {
    "imports": {},
    "exports": [
      {
        "type": "ComponentDeclarationNode",
        "payload": {
          "componentName": "TemplateLiteral",
          "propertyDeclarations": [
            {
              "name": "expression",
              "type": {
                "type": "TypeReferenceNode",
                "payload": { "name": "string", "isArray": false }
              }
            },
            {
              "name": "isActive",
              "type": {
                "type": "TypeReferenceNode",
                "payload": { "name": "boolean", "isArray": false }
              }
            },
            {
              "name": "someNumber",
              "type": {
                "type": "TypeReferenceNode",
                "payload": { "name": "number", "isArray": false }
              }
            }
          ],
          "returnExpression": {
            "type": "TemplateLiteralNode",
            "payload": [
              {
                "type": "StringLiteralNode",
                "payload": "A template literal may contain "
              },
              {
                "type": "Identifier",
                "payload": "expression"
              },
              {
                "type": "StringLiteralNode",
                "payload": "s.\n\n  It can span multiple lines.\n\n  Interpolated Expressions can be arbitrarily complex:\n  "
              },
              {
                "type": "TernaryOperationNode",
                "payload": {
                  "condition": {
                    "type": "Identifier",
                    "payload": "isActive"
                  },
                  "true": {
                    "type": "BinaryOperationNode",
                    "payload": {
                      "operator": "MULTIPLY_BY",
                      "operands": [
                        {
                          "type": "NumberLiteralNode",
                          "payload": { "value": "27", "format": "DECIMAL" }
                        },
                        {
                          "type": "Identifier",
                          "payload": "someNumber"
                        }
                      ]
                    }
                  },
                  "false": {
                    "type": "BinaryOperationNode",
                    "payload": {
                      "operator": "MODULO",
                      "operands": [
                        {
                          "type": "Identifier",
                          "payload": "someNumber"
                        },
                        {
                          "type": "NumberLiteralNode",
                          "payload": { "value": "17", "format": "DECIMAL" }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "type": "StringLiteralNode",
                "payload": "\n\n  They can also contain other template literals:\n  "
              },
              {
                "type": "TernaryOperationNode",
                "payload": {
                  "condition": {
                    "type": "Identifier",
                    "payload": "isActive"
                  },
                  "true": {
                    "type": "TemplateLiteralNode",
                    "payload": [
                      { "type": "StringLiteralNode", "payload": "Is 27? " },
                      {
                        "type": "TernaryOperationNode",
                        "payload": {
                          "condition": {
                            "type": "BinaryOperationNode",
                            "payload": {
                              "operator": "EQUAL",
                              "operands": [
                                {
                                  "type": "Identifier",
                                  "payload": "someNumber"
                                },
                                {
                                  "type": "NumberLiteralNode",
                                  "payload": {
                                    "value": "27",
                                    "format": "DECIMAL"
                                  }
                                }
                              ]
                            }
                          },
                          "true": {
                            "type": "StringLiteralNode",
                            "payload": "yes"
                          },
                          "false": {
                            "type": "StringLiteralNode",
                            "payload": "no"
                          }
                        }
                      }
                    ]
                  },
                  "false": {
                    "type": "TemplateLiteralNode",
                    "payload": [
                      { "type": "StringLiteralNode", "payload": "Number is " },
                      {
                        "type": "NumberLiteralNode",
                        "payload": { "value": "27", "format": "DECIMAL" }
                      }
                    ]
                  }
                }
              },
              {
                "type": "StringLiteralNode",
                "payload": "\n\n  Even markup:\n  "
              },
              {
                "type": "TagNode",
                "payload": {
                  "tagName": "header",
                  "attributes": [],
                  "children": [
                    {
                      "type": "TagNode",
                      "payload": {
                        "tagName": "h1",
                        "attributes": [],
                        "children": [
                          {
                            "type": "TextNode",
                            "payload": { "value": "Number is" }
                          },
                          {
                            "type": "Identifier",
                            "payload": "someNumber"
                          }
                        ],
                        "isSelfClosing": false
                      }
                    }
                  ],
                  "isSelfClosing": false
                }
              },
              { "type": "StringLiteralNode", "payload": "\n  " }
            ]
          }
        }
      }
    ]
  }
}
