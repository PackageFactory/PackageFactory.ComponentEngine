[
  {
    "type": "KEYWORD_EXPORT",
    "value": "export"
  },
  {
    "type": "SPACE",
    "value": " "
  },
  {
    "type": "KEYWORD_COMPONENT",
    "value": "component"
  },
  {
    "type": "SPACE",
    "value": " "
  },
  {
    "type": "STRING",
    "value": "TemplateLiteral"
  },
  {
    "type": "SPACE",
    "value": " "
  },
  {
    "type": "BRACKET_CURLY_OPEN",
    "value": "{"
  },
  {
    "type": "END_OF_LINE",
    "value": "\n"
  },
  {
    "type": "SPACE",
    "value": "  "
  },
  {
    "type": "STRING",
    "value": "expression"
  },
  {
    "type": "COLON",
    "value": ":"
  },
  {
    "type": "SPACE",
    "value": " "
  },
  {
    "type": "STRING",
    "value": "string"
  },
  {
    "type": "END_OF_LINE",
    "value": "\n"
  },
  {
    "type": "SPACE",
    "value": "  "
  },
  {
    "type": "STRING",
    "value": "isActive"
  },
  {
    "type": "COLON",
    "value": ":"
  },
  {
    "type": "SPACE",
    "value": " "
  },
  {
    "type": "STRING",
    "value": "boolean"
  },
  {
    "type": "END_OF_LINE",
    "value": "\n"
  },
  {
    "type": "SPACE",
    "value": "  "
  },
  {
    "type": "STRING",
    "value": "someNumber"
  },
  {
    "type": "COLON",
    "value": ":"
  },
  {
    "type": "SPACE",
    "value": " "
  },
  {
    "type": "STRING",
    "value": "number"
  },
  {
    "type": "END_OF_LINE",
    "value": "\n"
  },
  {
    "type": "END_OF_LINE",
    "value": "\n"
  },
  {
    "type": "SPACE",
    "value": "  "
  },
  {
    "type": "KEYWORD_RETURN",
    "value": "return"
  },
  {
    "type": "SPACE",
    "value": " "
  },
  {
    "type": "TEMPLATE_LITERAL_START",
    "value": "`"
  },
  {
    "type": "STRING_QUOTED",
    "value": "A template literal may contain "
  },
  {
    "type": "DOLLAR",
    "value": "$"
  },
  {
    "type": "BRACKET_CURLY_OPEN",
    "value": "{"
  },
  {
    "type": "STRING",
    "value": "expression"
  },
  {
    "type": "BRACKET_CURLY_CLOSE",
    "value": "}"
  },
  {
    "type": "STRING_QUOTED",
    "value": "s.\n\n  It can span multiple lines.\n\n  Interpolated Expressions can be arbitrarily complex:\n  "
  },
  {
    "type": "DOLLAR",
    "value": "$"
  },
  {
    "type": "BRACKET_CURLY_OPEN",
    "value": "{"
  },
  {
    "type": "STRING",
    "value": "isActive"
  },
  {
    "type": "SPACE",
    "value": " "
  },
  {
    "type": "QUESTIONMARK",
    "value": "?"
  },
  {
    "type": "SPACE",
    "value": " "
  },
  {
    "type": "NUMBER_DECIMAL",
    "value": "27"
  },
  {
    "type": "SPACE",
    "value": " "
  },
  {
    "type": "COLON",
    "value": ":"
  },
  {
    "type": "SPACE",
    "value": " "
  },
  {
    "type": "NUMBER_DECIMAL",
    "value": "17"
  },
  {
    "type": "BRACKET_CURLY_CLOSE",
    "value": "}"
  },
  {
    "type": "STRING_QUOTED",
    "value": "\n\n  They can also contain other template literals:\n  "
  },
  {
    "type": "DOLLAR",
    "value": "$"
  },
  {
    "type": "BRACKET_CURLY_OPEN",
    "value": "{"
  },
  {
    "type": "STRING",
    "value": "isActive"
  },
  {
    "type": "SPACE",
    "value": " "
  },
  {
    "type": "QUESTIONMARK",
    "value": "?"
  },
  {
    "type": "SPACE",
    "value": " "
  },
  {
    "type": "TEMPLATE_LITERAL_START",
    "value": "`"
  },
  {
    "type": "STRING_QUOTED",
    "value": "Is 27? "
  },
  {
    "type": "DOLLAR",
    "value": "$"
  },
  {
    "type": "BRACKET_CURLY_OPEN",
    "value": "{"
  },
  {
    "type": "STRING",
    "value": "someNumber"
  },
  {
    "type": "SPACE",
    "value": " "
  },
  {
    "type": "COMPARATOR_EQUAL",
    "value": "==="
  },
  {
    "type": "SPACE",
    "value": " "
  },
  {
    "type": "NUMBER_DECIMAL",
    "value": "27"
  },
  {
    "type": "SPACE",
    "value": " "
  },
  {
    "type": "QUESTIONMARK",
    "value": "?"
  },
  {
    "type": "SPACE",
    "value": " "
  },
  {
    "type": "STRING_QUOTED",
    "value": "yes"
  },
  {
    "type": "SPACE",
    "value": " "
  },
  {
    "type": "COLON",
    "value": ":"
  },
  {
    "type": "SPACE",
    "value": " "
  },
  {
    "type": "STRING_QUOTED",
    "value": "no"
  },
  {
    "type": "BRACKET_CURLY_CLOSE",
    "value": "}"
  },
  {
    "type": "TEMPLATE_LITERAL_END",
    "value": "`"
  },
  {
    "type": "SPACE",
    "value": " "
  },
  {
    "type": "COLON",
    "value": ":"
  },
  {
    "type": "SPACE",
    "value": " "
  },
  {
    "type": "TEMPLATE_LITERAL_START",
    "value": "`"
  },
  {
    "type": "STRING_QUOTED",
    "value": "Number is "
  },
  {
    "type": "DOLLAR",
    "value": "$"
  },
  {
    "type": "BRACKET_CURLY_OPEN",
    "value": "{"
  },
  {
    "type": "NUMBER_DECIMAL",
    "value": "27"
  },
  {
    "type": "BRACKET_CURLY_CLOSE",
    "value": "}"
  },
  {
    "type": "TEMPLATE_LITERAL_END",
    "value": "`"
  },
  {
    "type": "BRACKET_CURLY_CLOSE",
    "value": "}"
  },
  {
    "type": "STRING_QUOTED",
    "value": "\n\n  Even markup:\n  "
  },
  {
    "type": "DOLLAR",
    "value": "$"
  },
  {
    "type": "BRACKET_CURLY_OPEN",
    "value": "{"
  },
  {
    "type": "END_OF_LINE",
    "value": "\n"
  },
  {
    "type": "SPACE",
    "value": "    "
  },
  {
    "type": "TAG_START_OPENING",
    "value": "<"
  },
  {
    "type": "STRING",
    "value": "header"
  },
  {
    "type": "TAG_END",
    "value": ">"
  },
  {
    "type": "END_OF_LINE",
    "value": "\n"
  },
  {
    "type": "SPACE",
    "value": "      "
  },
  {
    "type": "TAG_START_OPENING",
    "value": "<"
  },
  {
    "type": "STRING",
    "value": "h1"
  },
  {
    "type": "TAG_END",
    "value": ">"
  },
  {
    "type": "STRING",
    "value": "Number"
  },
  {
    "type": "SPACE",
    "value": " "
  },
  {
    "type": "STRING",
    "value": "is"
  },
  {
    "type": "SPACE",
    "value": " "
  },
  {
    "type": "BRACKET_CURLY_OPEN",
    "value": "{"
  },
  {
    "type": "STRING",
    "value": "someNumber"
  },
  {
    "type": "BRACKET_CURLY_CLOSE",
    "value": "}"
  },
  {
    "type": "TAG_START_CLOSING",
    "value": "</"
  },
  {
    "type": "STRING",
    "value": "h1"
  },
  {
    "type": "TAG_END",
    "value": ">"
  },
  {
    "type": "END_OF_LINE",
    "value": "\n"
  },
  {
    "type": "SPACE",
    "value": "    "
  },
  {
    "type": "TAG_START_CLOSING",
    "value": "</"
  },
  {
    "type": "STRING",
    "value": "header"
  },
  {
    "type": "TAG_END",
    "value": ">"
  },
  {
    "type": "END_OF_LINE",
    "value": "\n"
  },
  {
    "type": "SPACE",
    "value": "  "
  },
  {
    "type": "BRACKET_CURLY_CLOSE",
    "value": "}"
  },
  {
    "type": "STRING_QUOTED",
    "value": "\n  "
  },
  {
    "type": "TEMPLATE_LITERAL_END",
    "value": "`"
  },
  {
    "type": "END_OF_LINE",
    "value": "\n"
  },
  {
    "type": "BRACKET_CURLY_CLOSE",
    "value": "}"
  },
  {
    "type": "END_OF_LINE",
    "value": "\n"
  }
]
